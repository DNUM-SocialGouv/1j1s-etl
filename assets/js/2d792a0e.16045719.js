"use strict";(self.webpackChunk_1j1s_etl_docs=self.webpackChunk_1j1s_etl_docs||[]).push([[571],{9072:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var s=i(4848),t=i(8453);const o={sidebar_label:"Langages",sidebar_position:2},d="Standards d'\xe9quipe li\xe9s au Code",r={id:"conventions/langages",title:"Standards d'\xe9quipe li\xe9s au Code",description:"20 Avril 2023",source:"@site/docs/conventions/langages.md",sourceDirName:"conventions",slug:"/conventions/langages",permalink:"/1j1s-etl/docs/conventions/langages",draft:!1,unlisted:!1,editUrl:"https://github.com/DNUM-SocialGouv/1j1s-etl/tree/main/docs/docs/docs/conventions/langages.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Langages",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Git",permalink:"/1j1s-etl/docs/conventions/git"},next:{title:"\ud83c\udf31 Onboarding",permalink:"/1j1s-etl/docs/category/-onboarding"}},a={},l=[{value:"Choix du langage",id:"choix-du-langage",level:2},{value:"Principes g\xe9n\xe9raux",id:"principes-g\xe9n\xe9raux",level:2},{value:"Paradigme",id:"paradigme",level:3},{value:"Port\xe9e des m\xe9thodes et des attributs",id:"port\xe9e-des-m\xe9thodes-et-des-attributs",level:3},{value:"Fonctions pures",id:"fonctions-pures",level:3},{value:"Style de code",id:"style-de-code",level:2},{value:"Utilisation des ternaires",id:"utilisation-des-ternaires",level:3},{value:"<code>if</code> \xe0 une seule instruction",id:"if-\xe0-une-seule-instruction",level:3},{value:"<code>async / await</code> vs <code>.then().catch()</code>",id:"async--await-vs-thencatch",level:3},{value:"Interface vs Type",id:"interface-vs-type",level:3},{value:"D\xe9limitation d&#39;une instruction",id:"d\xe9limitation-dune-instruction",level:3},{value:"D\xe9claration des variables",id:"d\xe9claration-des-variables",level:3},{value:"Guillemets",id:"guillemets",level:3},{value:"Espace vs Tabulation pour l&#39;indentation",id:"espace-vs-tabulation-pour-lindentation",level:3},{value:"Convention de code",id:"convention-de-code",level:3},{value:"Nommage des fichiers",id:"nommage-des-fichiers",level:3},{value:"Typage dynamique",id:"typage-dynamique",level:3},{value:"Ts-ignore",id:"ts-ignore",level:3},{value:"Commentaires",id:"commentaires",level:3},{value:"Complexit\xe9s",id:"complexit\xe9s",level:2},{value:"Cyclomatique",id:"cyclomatique",level:3},{value:"Cognitive",id:"cognitive",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"standards-d\xe9quipe-li\xe9s-au-code",children:"Standards d'\xe9quipe li\xe9s au Code"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"20 Avril 2023"})}),"\n",(0,s.jsx)(n.h2,{id:"choix-du-langage",children:"Choix du langage"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons choisi de partir sur du ",(0,s.jsx)(n.code,{children:"TypeScript"})," sur une plateforme ",(0,s.jsx)(n.code,{children:"NodeJS"}),". Ce choix s'explique par\nla comp\xe9tence de l'\xe9quipe sur la technologie et le fait que nous n'avons pas d'enjeux de performances\nparticuliers \xe0 date."]}),"\n",(0,s.jsx)(n.h2,{id:"principes-g\xe9n\xe9raux",children:"Principes g\xe9n\xe9raux"}),"\n",(0,s.jsx)(n.h3,{id:"paradigme",children:"Paradigme"}),"\n",(0,s.jsx)(n.p,{children:"Nous avons choisi de d\xe9velopper l'application en programmation orient\xe9e objet afin d'augmenter la\nlisibilit\xe9 du code et d'en adopter ses principes."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Exemple"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class MaClasse {\n    public doSomething(): Promise<void> {\n        // do something ...\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"port\xe9e-des-m\xe9thodes-et-des-attributs",children:"Port\xe9e des m\xe9thodes et des attributs"}),"\n",(0,s.jsx)(n.p,{children:"Nous avons d\xe9cid\xe9 que les port\xe9es des m\xe9thodes et des attributs seront [to be continued...]"}),"\n",(0,s.jsx)(n.h3,{id:"fonctions-pures",children:"Fonctions pures"}),"\n",(0,s.jsx)(n.p,{children:"Dans la m\xeame veine, nous avons d\xe9cid\xe9 que nos fonctions devaient \xeatre des fonctions pures. C'est-\xe0-dire qu'une fonction\nne doit pas modifier ses param\xe8tres d'entr\xe9es et doit \xeatre idempotente."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Exemple"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class Calculette {\n    public additionner(a: number, b: number): number {\n        return a + b;\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"style-de-code",children:"Style de code"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons choisi d'utiliser ",(0,s.jsx)(n.a,{href:"https://eslint.org/",children:"ESLint"})," pour appliquer des r\xe8gles concernant notre style de code.\nVous trouverez ci-dessous une liste non-exhaustive de r\xe8gles \xe0 appliquer dans nos d\xe9p\xf4ts."]}),"\n",(0,s.jsx)(n.h3,{id:"utilisation-des-ternaires",children:"Utilisation des ternaires"}),"\n",(0,s.jsx)(n.p,{children:"Nous limitons l'utilisation des conditions ternaires lorsque la condition est tr\xe8s simple."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Exemple"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"isTrue(false)\n    ? true\n    : false;\n"})}),"\n",(0,s.jsx)(n.p,{children:"L'utilisation des niveaux suppl\xe9mentaires est proscrite."}),"\n",(0,s.jsxs)(n.h3,{id:"if-\xe0-une-seule-instruction",children:[(0,s.jsx)(n.code,{children:"if"})," \xe0 une seule instruction"]}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons d\xe9cid\xe9 qu'un ",(0,s.jsx)(n.code,{children:"if"})," suivi d'une seule instruction devait quand m\xeame \xeatre wrapp\xe9 dans des accolades."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Valide\nif (true) {\n    return false;\n}\n\n// Invalide\nif (true) \n    return false;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"async--await-vs-thencatch",children:[(0,s.jsx)(n.code,{children:"async / await"})," vs ",(0,s.jsx)(n.code,{children:".then().catch()"})]}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons d\xe9cid\xe9 d'utiliser la version d'ES2015 pour g\xe9rer nos ",(0,s.jsx)(n.code,{children:"Promise"})," afin d'am\xe9liorer la lisibilit\xe9 du code."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Exemple"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"function toto(): Promise<string> {\n\treturn new Promise((resolve) => {\n\t\tresolve('toto');\n    });\n}\n\n// Valide\nasync function modern(): Promise<string> {\n\tconst tata = await toto();\n\treturn tata + \"tata\";\n}\n\n// Invalide\nasync function deprecated(): Promise<string> {\n\tconst tata = toto()\n        .then((value) => value)\n        .catch((e) => {/* ... */})\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"interface-vs-type",children:"Interface vs Type"}),"\n",(0,s.jsx)(n.p,{children:"Nous avons choisi d'utiliser des interfaces pour d\xe9finir un contrat \xe0 impl\xe9menter et des types si nous devons d\xe9finir\ndes structures de donn\xe9es qui n'ont pas de comportement."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Valide\nexport type Personne = {\n\tnom: string;\n\tprenom: string;\n\tage: number;\n}\n\n// Invalide\nexport interface Personne {\n\tnom: string;\n\tprenom: string;\n\tage: number;\n}\n\n// Valide\nexport interface Contrat {\n    doSomething(a: number, b: string): void;\n}\n\n// Invalide\nexport type Contrat = {\n\tdoSomething: (a: number, b: string) => void;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"d\xe9limitation-dune-instruction",children:"D\xe9limitation d'une instruction"}),"\n",(0,s.jsxs)(n.p,{children:["Chaque ligne d'instruction devra se terminer par un point-virgule ",(0,s.jsx)(n.code,{children:";"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Valide\nconst toto = 'toto';\n\n// Invalide\nconst toto = 'toto'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"d\xe9claration-des-variables",children:"D\xe9claration des variables"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons d\xe9cid\xe9 de d\xe9clarer les variables avec des ",(0,s.jsx)(n.code,{children:"const"})," et ",(0,s.jsx)(n.code,{children:"let"}),".\nL'utilisation de ",(0,s.jsx)(n.code,{children:"var"})," est proscrite."]}),"\n",(0,s.jsx)(n.h3,{id:"guillemets",children:"Guillemets"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons d\xe9cid\xe9 d'utiliser des guillemets (",(0,s.jsx)(n.em,{children:"double quote"}),") et guillemets obliques (",(0,s.jsx)(n.em,{children:"backtick"}),") dans le code."]}),"\n",(0,s.jsx)(n.h3,{id:"espace-vs-tabulation-pour-lindentation",children:"Espace vs Tabulation pour l'indentation"}),"\n",(0,s.jsx)(n.p,{children:"Nous avons choisi d'utiliser le caract\xe8re tabulation plut\xf4t que les caract\xe8res d'espace pour notre indentation."}),"\n",(0,s.jsx)(n.h3,{id:"convention-de-code",children:"Convention de code"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons d\xe9cid\xe9 d'utiliser la convention Java dans le code car elle est tr\xe8s r\xe9pandue et que nous sommes align\xe9s avec\ncette convention (",(0,s.jsx)(n.a,{href:"https://www.oracle.com/technetwork/java/codeconventions-150003.pdf",children:"ici"}),"). De plus, elle est\ncompatible avec notre choix de linter."]}),"\n",(0,s.jsx)(n.h3,{id:"nommage-des-fichiers",children:"Nommage des fichiers"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons d\xe9cid\xe9 d'adopter la convention ",(0,s.jsx)(n.strong,{children:"kebab-case"})," pour nommer nos fichiers. De plus, nous avons d\xe9cid\xe9 d'ajouter\nun suffixe pour d\xe9finir la nature de ce qui se trouve \xe0 l'int\xe9rieur."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Exemple"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Valide : minio-storage.client.ts\n\nInvalide : MinioStorageClient.ts\n"})}),"\n",(0,s.jsx)(n.h3,{id:"typage-dynamique",children:"Typage dynamique"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons d\xe9cid\xe9 de ne pas utiliser le type ",(0,s.jsx)(n.code,{children:"any"})," sauf en cas d'absolue n\xe9cessit\xe9."]}),"\n",(0,s.jsx)(n.h3,{id:"ts-ignore",children:"Ts-ignore"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons d\xe9cid\xe9 de ne pas utiliser l'annotation ",(0,s.jsx)(n.code,{children:"ts-ignore"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"commentaires",children:"Commentaires"}),"\n",(0,s.jsx)(n.p,{children:"Nous avons d\xe9cid\xe9 d'\xe9crire du code auto-portant et de n'utiliser les commentaires qu'en cas de n\xe9cessit\xe9 et se limitant \xe0 1 \xe0 2 lignes."}),"\n",(0,s.jsx)(n.h2,{id:"complexit\xe9s",children:"Complexit\xe9s"}),"\n",(0,s.jsx)(n.h3,{id:"cyclomatique",children:"Cyclomatique"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons fix\xe9 la limite maximale de complexit\xe9 cyclomatique \xe0 ",(0,s.jsx)(n.strong,{children:"10"})," afin de conserver des fonctions simples, am\xe9liorer la\nlisibilit\xe9 et la maintenance du code."]}),"\n",(0,s.jsx)(n.h3,{id:"cognitive",children:"Cognitive"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons fix\xe9 la limite maximale de complexit\xe9 cognitive \xe0 ",(0,s.jsx)(n.strong,{children:"2"})," afin de conserver des fonctions lisibles et de nous\nforcer \xe0 extraire la complexit\xe9 dans des sous-fonctions."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var s=i(6540);const t={},o=s.createContext(t);function d(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);