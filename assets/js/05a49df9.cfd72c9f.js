"use strict";(self.webpackChunk_1j1s_etl_docs=self.webpackChunk_1j1s_etl_docs||[]).push([[160],{1936:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var s=i(5893),t=i(1151);const r={sidebar_label:"Git",sidebar_position:1},o="Standards d'\xe9quipe li\xe9s \xe0 Git",d={id:"conventions/git",title:"Standards d'\xe9quipe li\xe9s \xe0 Git",description:"20 Avril 2023",source:"@site/docs/conventions/git.md",sourceDirName:"conventions",slug:"/conventions/git",permalink:"/1j1s-etl/docs/conventions/git",draft:!1,unlisted:!1,editUrl:"https://github.com/DNUM-SocialGouv/1j1s-etl/tree/main/docs/docs/docs/conventions/git.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Git",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\u2696\ufe0f Conventions",permalink:"/1j1s-etl/docs/category/\ufe0f-conventions"},next:{title:"Langages",permalink:"/1j1s-etl/docs/conventions/langages"}},c={},l=[{value:"Commit",id:"commit",level:2},{value:"Convention",id:"convention",level:3},{value:"Langue",id:"langue",level:3},{value:"Contextes d&#39;un commit",id:"contextes-dun-commit",level:3},{value:"Contenu du message",id:"contenu-du-message",level:3},{value:"Strat\xe9gie pour les branches",id:"strat\xe9gie-pour-les-branches",level:2},{value:"Branche principale",id:"branche-principale",level:3},{value:"Autres branches",id:"autres-branches",level:3},{value:"Commits de &quot;Work In Progress&quot;",id:"commits-de-work-in-progress",level:2},{value:"Strat\xe9gie de merge",id:"strat\xe9gie-de-merge",level:2},{value:"Code Review",id:"code-review",level:3},{value:"Pull request interm\xe9diaire sur de gros tickets",id:"pull-request-interm\xe9diaire-sur-de-gros-tickets",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"standards-d\xe9quipe-li\xe9s-\xe0-git",children:"Standards d'\xe9quipe li\xe9s \xe0 Git"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"20 Avril 2023"})}),"\n",(0,s.jsx)(n.h2,{id:"commit",children:"Commit"}),"\n",(0,s.jsx)(n.h3,{id:"convention",children:"Convention"}),"\n",(0,s.jsxs)(n.p,{children:['Nous allons nous baser sur la convention "',(0,s.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"Conventional Commits"}),'".']}),"\n",(0,s.jsx)(n.h3,{id:"langue",children:"Langue"}),"\n",(0,s.jsx)(n.p,{children:"Il a \xe9t\xe9 convenu de r\xe9diger les commits en fran\xe7ais car le projet n'est pas \xe0 destination internationale.\nCelui-ci est destin\xe9 en premier lieu au gouvernement fran\xe7ais."}),"\n",(0,s.jsx)(n.h3,{id:"contextes-dun-commit",children:"Contextes d'un commit"}),"\n",(0,s.jsx)(n.p,{children:"La liste des contextes suivants ont \xe9t\xe9 identifi\xe9s pour ce d\xe9p\xf4t :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"architecture"})," - pour toute modification de l'architecture du projet"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cli"})," - pour toute modification de la CLI"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"configuration"})," - pour toute modification de configuration, incluant la configuration des modules"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"dependencies"})," - pour toute modification ayant trait aux d\xe9pendances du projet"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"evenements"})," - pour toute modification ayant trait aux \xe9v\xe9nements"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"logements"})," - pour toute modification ayant trait aux annonces de logements"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"multiple"})," - pour toute modification ayant trait \xe0 2 ou plusieurs contextes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"stages"})," - pour toute modification ayant trait aux offres de stages"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"contenu-du-message",children:"Contenu du message"}),"\n",(0,s.jsx)(n.p,{children:"Un message de commit doit contenir a minima un titre court format\xe9 contenant un pr\xe9fixe cit\xe9 dans la convention\nci-dessus. Si une description suppl\xe9mentaire est n\xe9cessaire, celle-ci sera ajout\xe9e dans un sous-message de commit."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'$ git commit -m "feat(transformation): mise en place du client minio" -m "Une description un peu plus d\xe9taill\xe9e..."\n'})}),"\n",(0,s.jsx)(n.h2,{id:"strat\xe9gie-pour-les-branches",children:"Strat\xe9gie pour les branches"}),"\n",(0,s.jsx)(n.h3,{id:"branche-principale",children:"Branche principale"}),"\n",(0,s.jsxs)(n.p,{children:["Nous avons d\xe9cid\xe9 que nous aurons une seule branche de d\xe9ploiement ",(0,s.jsx)(n.code,{children:"main"})," sur tous les d\xe9p\xf4ts li\xe9s aux stages. Puis nous\nouvrirons des branches pour chacune de nos fonctionnalit\xe9s que nous mergerons en finalit\xe9 sur la branche ",(0,s.jsx)(n.code,{children:"main"})," une fois\ntoutes les \xe9tapes du flux franchies."]}),"\n",(0,s.jsx)(n.h3,{id:"autres-branches",children:"Autres branches"}),"\n",(0,s.jsx)(n.p,{children:"Nous avons opt\xe9 pour la convention suivante concernant le nom des branches :"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"<type de ticket>/<description>"})}),"\n",(0,s.jsx)(n.p,{children:"Les types de ticket possibles sont les suivants :"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Pr\xe9fixe"}),(0,s.jsx)(n.th,{children:"Type de ticket"}),(0,s.jsx)(n.th,{children:"D\xe9finition"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"feat"})}),(0,s.jsx)(n.td,{children:"Fonctionnalit\xe9"}),(0,s.jsx)(n.td,{children:"Une nouvelle fonctionnalit\xe9 m\xe9tier ajout\xe9e \xe0 l'application"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"evol"})}),(0,s.jsx)(n.td,{children:"Evolution"}),(0,s.jsx)(n.td,{children:"Une \xe9volution d'une fonctionnalit\xe9 existante m\xe9tier"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fix"})}),(0,s.jsx)(n.td,{children:"Correction"}),(0,s.jsx)(n.td,{children:"Correction d'un bug identifi\xe9"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tech"})}),(0,s.jsx)(n.td,{children:"Technique"}),(0,s.jsx)(n.td,{children:"Une nouvelle fonctionnalit\xe9 technique pour am\xe9liorer l'application"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"refacto"})}),(0,s.jsx)(n.td,{children:"Technique"}),(0,s.jsx)(n.td,{children:"Une refonte technique pour am\xe9liorer l'application"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"doc"})}),(0,s.jsx)(n.td,{children:"Documentation"}),(0,s.jsx)(n.td,{children:"Ajouter ou modifier de la documentation"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"commits-de-work-in-progress",children:'Commits de "Work In Progress"'}),"\n",(0,s.jsxs)(n.p,{children:['Afin de pr\xe9server un arbre des commits propres, il sera n\xe9cessaire de supprimer les commits dits "wip" \xe0 l\'aide la\nfonction ',(0,s.jsx)(n.code,{children:"rebase"})," propos\xe9e par Git."]}),"\n",(0,s.jsx)(n.p,{children:"Exemple qui permet de r\xe9ecrire l'arbre des 4 derniers commits :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ git rebase -i head~4\n"})}),"\n",(0,s.jsx)(n.p,{children:'Si votre dernier commit est un "wip" que vous avez remis au propre, vous pouvez simplement l\'amend comme ci-dessous :'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ git commit --amend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\u26a0\ufe0f Nous ne squasherons pas nos commits lors du merge d'une branche dans la branche ",(0,s.jsx)(n.code,{children:"main"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"strat\xe9gie-de-merge",children:"Strat\xe9gie de merge"}),"\n",(0,s.jsx)(n.h3,{id:"code-review",children:"Code Review"}),"\n",(0,s.jsxs)(n.p,{children:['Nous allons nous baser sur la convention "',(0,s.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"Conventional Comments"}),'".']}),"\n",(0,s.jsx)(n.p,{children:"Chaque Pull Request (PR) devra \xeatre approuv\xe9e a minima par une personne n'ayant pas travaill\xe9 sur le ticket en rapport\navec la PR."}),"\n",(0,s.jsx)(n.h3,{id:"pull-request-interm\xe9diaire-sur-de-gros-tickets",children:"Pull request interm\xe9diaire sur de gros tickets"}),"\n",(0,s.jsx)(n.p,{children:"S'organiser par d\xe9p\xf4t/bin\xf4me."})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>o});var s=i(7294);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);